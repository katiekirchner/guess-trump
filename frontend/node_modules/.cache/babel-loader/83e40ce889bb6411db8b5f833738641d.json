{"ast":null,"code":"import _classCallCheck from\"/Users/katiekirchner/Sites/guesstrumptweet/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/katiekirchner/Sites/guesstrumptweet/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/katiekirchner/Sites/guesstrumptweet/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/katiekirchner/Sites/guesstrumptweet/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,useState,useEffect}from'react';// import React from 'react';\nimport'./css/App.css';import bird from'./component/trumpBird1.png';import TweetBox from'./component/tweetBox';var shuffle=require('shuffle-array');var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={fakeTweet:\" \",tweet1:\" \",tweet2:\" \",previous:\" \",correct:0,total:0,accuracy:0,allTweets:[\" \",\" \",\" \"]};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.getTweets();this.getTweets();}},{key:\"getTweets\",value:function getTweets(){var _this2=this;this.setState({previous:this.state.fakeTweet});fetch('/tweet').then(function(res){return res.json();}).then(function(data){_this2.setState({fakeTweet:data.tweet});});fetch('/random').then(function(res){return res.json();}).then(function(data){_this2.setState({tweet1:data.random});});fetch('/random').then(function(res){return res.json();}).then(function(data){_this2.setState({tweet2:data.random});_this2.setAllTweets();});}},{key:\"setAllTweets\",value:function setAllTweets(){var num=Math.floor(Math.random()*3);if(num==0){this.setState({allTweets:[this.state.fakeTweet,this.state.tweet1,this.state.tweet2]});}else if(num==1){this.setState({allTweets:[this.state.tweet1,this.state.fakeTweet,this.state.tweet2]});}else if(num==2){this.setState({allTweets:[this.state.tweet1,this.state.tweet2,this.state.fakeTweet]});}}},{key:\"counter\",value:function counter(value){var tot=this.state.total+1;if(this.state.allTweets[value]===this.state.fakeTweet){var cor=this.state.correct+1;this.setState({correct:cor});var acc=(cor/tot*100).toPrecision(4);this.setState({accuracy:acc});}else{var accurate=(this.state.correct/tot*100).toPrecision(4);this.setState({accuracy:accurate});}this.setState({total:tot});// this.setState({previous: this.state.fakeTweet})\n// this.setAccuracy();\nthis.getTweets();}// renderTweetBox(){\n//     return (\n//         <div className=\"tweet-container\">   \n//           <div onClick={()=> this.counter(0)}>\n//             <TweetBox text={this.state.allTweets[0]}/>\n//           </div> \n//           <div onClick={()=> this.counter(1)}>\n//             < TweetBox text={this.state.allTweets[1]}/>\n//           </div>\n//           <div onClick={()=> this.counter(2)}>\n//             <TweetBox text={this.state.allTweets[2]}/>\n//           </div>\n//         </div>\n//       );\n// }\n},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"header\"},/*#__PURE__*/React.createElement(\"img\",{src:bird,className:\"trump-bird\",alt:\"logo\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"grid-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"left-panel\"},/*#__PURE__*/React.createElement(\"p\",{className:\"question\"},\"Can you pick the fake Tweet?\"),/*#__PURE__*/React.createElement(\"p\",{className:\"desc\"},\"Using a corpus of the entire collection of Donald Trump's Tweets, this app generates a Markov chain.\"),/*#__PURE__*/React.createElement(\"p\",{className:\"desc\"},\"From the Markov chain, a sentence (or Tweet in this case) is created.\"),/*#__PURE__*/React.createElement(\"p\",{className:\"desc\"},\"The fake Tweet generated from the Markov chain is placed amongst two real Tweets randomly selected from Donald Trump's entire Tweet history.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"tweet-container\"},/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return _this3.counter(0);}},/*#__PURE__*/React.createElement(TweetBox,{text:this.state.allTweets[0]})),/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return _this3.counter(1);}},/*#__PURE__*/React.createElement(TweetBox,{text:this.state.allTweets[1]})),/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return _this3.counter(2);}},/*#__PURE__*/React.createElement(TweetBox,{text:this.state.allTweets[2]}))),/*#__PURE__*/React.createElement(\"div\",{className:\"right-panel\"},/*#__PURE__*/React.createElement(\"p\",{className:\"acc\"},\"Accuracy: \",this.state.accuracy,\"%\"),/*#__PURE__*/React.createElement(\"p\",null,\"Correct: \",this.state.correct,\"\\xA0\\xA0\\xA0 Total: \",this.state.total),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{className:\"reload-button\",onClick:function onClick(){return _this3.getTweets();}},\" Reload Tweets \"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",null,\" Previous fake Tweet: \"),/*#__PURE__*/React.createElement(\"p\",null,\" \",this.state.previous,\" \"))));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/katiekirchner/Sites/guesstrumptweet/frontend/src/App.js"],"names":["React","Component","useState","useEffect","bird","TweetBox","shuffle","require","App","props","state","fakeTweet","tweet1","tweet2","previous","correct","total","accuracy","allTweets","getTweets","setState","fetch","then","res","json","data","tweet","random","setAllTweets","num","Math","floor","value","tot","cor","acc","toPrecision","accurate","counter"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect } from 'react';\n// import React from 'react';\n\nimport './css/App.css';\nimport bird from './component/trumpBird1.png';\nimport TweetBox from './component/tweetBox';\n\nvar shuffle = require('shuffle-array');\n\n\n  class App extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        fakeTweet: \" \",\n        tweet1: \" \",\n        tweet2: \" \",\n        previous:\" \",\n        correct: 0,\n        total: 0,\n        accuracy: 0,\n        allTweets: [\" \", \" \", \" \"]  \n      };\n    }\n\n\n    componentDidMount(){\n      \n      this.getTweets();\n      this.getTweets();\n   }\n\n\n\n\n\n    getTweets(){\n        this.setState({previous: this.state.fakeTweet})\n\n        fetch('/tweet').then(res => res.json()).then(data => {\n          this.setState({fakeTweet: data.tweet});\n        });\n\n        fetch('/random').then(res => res.json()).then(data => {\n          this.setState({tweet1: data.random});\n        });\n\n        fetch('/random').then(res => res.json()).then(data => {\n          this.setState({tweet2: data.random});\n          this.setAllTweets();\n        });\n\n    }\n\n\n  \n\n    setAllTweets(){      \n        var num = (Math.floor(Math.random() * 3));  \n\n        if (num == 0){\n          this.setState({allTweets: [ this.state.fakeTweet, this.state.tweet1, this.state.tweet2]});\n        } else if (num == 1){\n          this.setState({allTweets: [ this.state.tweet1, this.state.fakeTweet, this.state.tweet2]});\n        } else if (num == 2){\n          this.setState({allTweets: [ this.state.tweet1, this.state.tweet2, this.state.fakeTweet]});\n        }\n    }\n\n\n    counter(value){\n       var tot = this.state.total + 1;\n\n      if (this.state.allTweets[value] === this.state.fakeTweet){\n\n        var cor = this.state.correct+1;\n        this.setState({correct: cor});\n\n        var acc = ((cor/tot)*100).toPrecision(4);\n        this.setState({accuracy: acc});\n      } else {\n\n        var accurate = ((this.state.correct/tot)*100).toPrecision(4);\n\n        this.setState({accuracy: accurate});\n      }\n\n\n      this.setState({total: tot});\n      // this.setState({previous: this.state.fakeTweet})\n\n      // this.setAccuracy();\n      this.getTweets();\n    }\n\n\n\n    // renderTweetBox(){\n\n    //     return (\n    //         <div className=\"tweet-container\">   \n\n    //           <div onClick={()=> this.counter(0)}>\n    //             <TweetBox text={this.state.allTweets[0]}/>\n    //           </div> \n\n    //           <div onClick={()=> this.counter(1)}>\n    //             < TweetBox text={this.state.allTweets[1]}/>\n    //           </div>\n\n    //           <div onClick={()=> this.counter(2)}>\n    //             <TweetBox text={this.state.allTweets[2]}/>\n    //           </div>\n    //         </div>\n    //       );\n        \n    // }\n\n\n\n    render (){\n\n      return (\n\n          <div className=\"App\">\n            <header className=\"header\">\n              <img src={bird} className=\"trump-bird\" alt=\"logo\" />\n            </header>\n\n\n            <div className=\"grid-container\">\n                <div className=\"left-panel\">\n\n                  <p className=\"question\">\n                  Can you pick the fake Tweet?\n                  </p>\n\n\n                  <p className=\"desc\">\n                    Using a corpus of the entire collection of\n                    Donald Trump's Tweets, this app generates a Markov chain. \n                  </p>\n\n                  <p className=\"desc\">\n                    From the Markov chain, a sentence (or Tweet in this case)\n                    is created.\n\n                  </p>\n\n                  <p className=\"desc\">\n                    The fake Tweet generated from the Markov chain is placed\n                    amongst two real Tweets randomly selected from Donald Trump's \n                    entire Tweet history.\n                  </p>\n\n                \n\n                </div>\n\n                <div className=\"tweet-container\">   \n\n                  <div onClick={()=> this.counter(0)}>\n                    <TweetBox text={this.state.allTweets[0]}/>\n                  </div> \n\n                  <div onClick={()=> this.counter(1)}>\n                    < TweetBox text={this.state.allTweets[1]}/>\n                  </div>\n\n                  <div onClick={()=> this.counter(2)}>\n                    <TweetBox text={this.state.allTweets[2]}/>\n                  </div>\n              </div>\n\n                <div className=\"right-panel\">\n                    <p className=\"acc\">\n                      Accuracy: {this.state.accuracy}%\n                    </p>\n                    <p>\n                      Correct: {this.state.correct}  \n                      &nbsp;&nbsp;&nbsp;  \n                      Total: {this.state.total} \n                    </p>\n\n                    <br></br>\n                    <button className=\"reload-button\" onClick={() => this.getTweets()}> Reload Tweets </button>      \n                \n                    <hr></hr>\n\n                    <p> Previous fake Tweet: </p>\n                    <p> {this.state.previous} </p>\n                </div>\n\n              </div>\n          </div>\n      );\n    }\n  } \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}