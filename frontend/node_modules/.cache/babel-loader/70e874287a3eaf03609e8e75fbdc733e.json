{"ast":null,"code":"var _jsxFileName = \"/Users/katiekirchner/Sites/guesstrumptweet/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './css/App.css';\nimport bird from './component/trumpBird1.png';\nimport TweetBox from './component/tweetBox';\n\nfunction App() {\n  const [tweet, setTweet] = useState(\"\");\n  const [random, setRandom] = useState(\"\");\n  const [random2, setRandom2] = useState(\"\");\n  const [correct, setCorrect] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [accuracy, setAccuracy] = useState(0);\n\n  function getTweets() {\n    fetch('/tweet').then(res => res.json()).then(data => {\n      setTweet(data.tweet);\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom(data.random);\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom2(data.random);\n    });\n  }\n\n  useEffect(() => {\n    getTweets();\n  }, []);\n\n  function updateTweets() {\n    getTweets();\n    setTotal(total + 1);\n  }\n\n  function renderTweetBox(text) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: bird,\n    className: \"trump-bird\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Using a corpus of the entire collection of Donald Trump's Tweets, a Tweet in the\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"The fake Tweet generated from the Markov chain is placed amongst two real Tweets randomly selected from Donald Trump's entire Tweet history.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Can you pick the fake Tweet?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Total: \", total, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tweet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, renderTweetBox(tweet), renderTweetBox(random), renderTweetBox(random2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"reload-button\",\n    onClick: () => updateTweets(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \" Reload \"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/katiekirchner/Sites/guesstrumptweet/frontend/src/App.js"],"names":["React","useState","useEffect","bird","TweetBox","App","tweet","setTweet","random","setRandom","random2","setRandom2","correct","setCorrect","total","setTotal","accuracy","setAccuracy","getTweets","fetch","then","res","json","data","updateTweets","renderTweetBox","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/App.css';\nimport bird from './component/trumpBird1.png';\nimport TweetBox from './component/tweetBox';\n\n\n\n\nfunction App() {\n\n  const [tweet, setTweet] = useState(\"\");\n  const [random, setRandom] = useState(\"\");\n  const [random2, setRandom2] = useState(\"\");\n\n\n  const [correct, setCorrect] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [accuracy, setAccuracy] = useState(0);\n\n\n\n  function getTweets(){\n      fetch('/tweet').then(res => res.json()).then(data => {\n        setTweet(data.tweet);\n      });\n\n      fetch('/random').then(res => res.json()).then(data => {\n        setRandom(data.random);\n      });\n\n      fetch('/random').then(res => res.json()).then(data => {\n        setRandom2(data.random);\n      });\n  }\n\n\n\n  useEffect(() => {\n    getTweets();\n  }, []);\n\n\n  function updateTweets(){\n      getTweets();\n      setTotal(total+1);\n  }\n\n\n\n\n  function renderTweetBox(text){\n    return (\n        <div>\n          <TweetBox text={text}/>\n        </div>\n      );\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <img src={bird} className=\"trump-bird\" alt=\"logo\" />\n      </header>\n\n\n      <div className=\"grid-container\">\n          <div className=\"left-panel\">\n            <p className=\"font20\">\n              Using a corpus of the entire collection of\n              Donald Trump's Tweets, a Tweet in the  \n            </p>\n\n            <p className=\"font20\">\n              The fake Tweet generated from the Markov chain is placed\n              amongst two real Tweets randomly selected from Donald Trump's \n              entire Tweet history.\n            </p>\n\n            <p className=\"font20\">\n             Can you pick the fake Tweet?\n            </p>\n\n\n            <p>Total: {total} </p>\n          </div>\n\n\n          <div className=\"tweet-container\">\n            {renderTweetBox(tweet)}\n            {renderTweetBox(random)}\n            {renderTweetBox(random2)}\n          </div>\n\n          <div className=\"right-panel\">\n              <button className=\"reload-button\" onClick={() => updateTweets()}> Reload </button>      \n          </div>\n\n        </div>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}