{"ast":null,"code":"var _jsxFileName = \"/Users/katiekirchner/Sites/guesstrumptweet/frontend/src/App.js\";\n// import React, {Component, useState, useEffect } from 'react';\nimport React from 'react';\nimport './css/App.css';\nimport bird from './component/trumpBird1.png';\nimport TweetBox from './component/tweetBox';\n\nvar shuffle = require('shuffle-array');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fakeTweet: '',\n      correct: 0,\n      total: 0,\n      accuracy: 0,\n      allTweets: [this.fakeTweet, \"\", \"\"]\n    };\n  }\n\n  componentDidMount() {\n    this.getTweets();\n    this.renderTweetBox();\n    console.log(\"Comp: \", this.state.allTweets);\n    shuffle(this.state.allTweets);\n  }\n\n  getTweets() {\n    fetch('/tweet').then(res => res.json()).then(data => {\n      // this.setState({fakeTweet: \"FAKE!! -- \" + data.tweet});\n      this.state.allTweets[0] = data.tweet; // this.state.allTweets[0]=(this.state.fakeTweet);\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      // this.setState({fakeTweet[1]:data.random });\n      this.state.allTweets[1] = data.random;\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      this.state.allTweets[2] = data.random;\n    });\n    this.setState({\n      fakeTweet: this.state.allTweets[0]\n    });\n    shuffle(this.state.allTweets);\n    shuffle(this.state.allTweets); // this.state.allTweets.sort(() => 0.5 - Math.random());\n    // this.state.allTweets.push(this.state.fakeTweet);\n    // this.setState(_.shuffle(this.state.allTweets));\n    // setAllTweets([fakeTweet, random, random2]);\n  }\n\n  counter(num) {\n    console.log(num, this.state.allTweets[num]);\n    console.log(this.state.fakeTweet);\n    console.log(this.state.allTweets[num] == this.state.fakeTweet);\n\n    if (this.state.allTweets[num] === this.state.fakeTweet) {\n      this.setState({\n        correct: this.state.correct + 1\n      });\n    }\n\n    this.setState({\n      total: this.state.total + 1\n    });\n    this.setAccuracy(); // this.componentDidMount();\n  }\n\n  setAccuracy() {\n    var num = this.state.total === 0 ? 0 : (this.state.correct / this.state.total * 100).toPrecision(4);\n    this.setState({\n      accuracy: num\n    });\n  }\n\n  renderTweetBox() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tweet-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.counter(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: this.state.allTweets[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.counter(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: this.state.allTweets[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.counter(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: this.state.allTweets[2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: bird,\n      className: \"trump-bird\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, \"Using a corpus of the entire collection of Donald Trump's Tweets, this app generates a Markov chain.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, \"From the Markov model, a sentence (or Tweet in this case) is created.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"The fake Tweet generated from the Markov chain is placed amongst two real Tweets randomly selected from Donald Trump's entire Tweet history.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, \"Can you pick the fake Tweet?\")), this.renderTweetBox(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"acc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Accuracy: \", this.state.accuracy, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, \"Correct: \", this.state.correct, \"\\xA0\\xA0\\xA0 Total: \", this.state.total), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"reload-button\",\n      onClick: () => this.componentDidMount(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, \" Reload \"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/katiekirchner/Sites/guesstrumptweet/frontend/src/App.js"],"names":["React","bird","TweetBox","shuffle","require","App","Component","constructor","props","state","fakeTweet","correct","total","accuracy","allTweets","componentDidMount","getTweets","renderTweetBox","console","log","fetch","then","res","json","data","tweet","random","setState","counter","num","setAccuracy","toPrecision","render"],"mappings":"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","sourcesContent":["// import React, {Component, useState, useEffect } from 'react';\nimport React from 'react';\n\nimport './css/App.css';\nimport bird from './component/trumpBird1.png';\nimport TweetBox from './component/tweetBox';\n\nvar shuffle = require('shuffle-array');\n\n\n  class App extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        fakeTweet: '',\n        correct: 0,\n        total: 0,\n        accuracy: 0,\n        allTweets: [this.fakeTweet,\"\",\"\"]    \n      };\n    }\n\n    componentDidMount(){\n      this.getTweets();\n      this.renderTweetBox();\n\n      console.log(\"Comp: \", this.state.allTweets)\n      shuffle(this.state.allTweets);\n   }\n\n  \n  \n\n    getTweets(){\n        fetch('/tweet').then(res => res.json()).then(data => {\n          // this.setState({fakeTweet: \"FAKE!! -- \" + data.tweet});\n          this.state.allTweets[0]=(data.tweet);\n\n          // this.state.allTweets[0]=(this.state.fakeTweet);\n\n        });\n\n        fetch('/random').then(res => res.json()).then(data => {\n          // this.setState({fakeTweet[1]:data.random });\n          this.state.allTweets[1]=(data.random);\n        });\n\n        fetch('/random').then(res => res.json()).then(data => {\n          this.state.allTweets[2]=(data.random);\n        });\n        \n        this.setState({fakeTweet: this.state.allTweets[0]});\n\n\n        shuffle(this.state.allTweets);\n        shuffle(this.state.allTweets);\n\n        \n        // this.state.allTweets.sort(() => 0.5 - Math.random());\n\n\n        // this.state.allTweets.push(this.state.fakeTweet);\n\n        // this.setState(_.shuffle(this.state.allTweets));\n        // setAllTweets([fakeTweet, random, random2]);\n    }\n\n\n\n    counter(num){\n      console.log(num, this.state.allTweets[num])\n      console.log(this.state.fakeTweet)\n\n      console.log(this.state.allTweets[num] == this.state.fakeTweet)\n\n      if (this.state.allTweets[num] === this.state.fakeTweet){\n        this.setState({correct: this.state.correct+1});\n      }\n\n      this.setState({total: this.state.total+1});\n      this.setAccuracy();\n\n      // this.componentDidMount();\n    }\n\n    setAccuracy(){\n      \n      var num = (this.state.total === 0) ? 0 : (((this.state.correct/this.state.total)*100).toPrecision(4));\n      this.setState({accuracy: num});\n    }\n\n \n\n    renderTweetBox(){\n\n        return (\n            <div className=\"tweet-container\">   \n\n              <div onClick={()=> this.counter(0)}>\n                <TweetBox text={this.state.allTweets[0]}/>\n              </div> \n\n              <div onClick={()=> this.counter(1)}>\n                < TweetBox text={this.state.allTweets[1]}/>\n              </div>\n\n              <div onClick={()=> this.counter(2)}>\n                <TweetBox text={this.state.allTweets[2]}/>\n              </div>\n            </div>\n          );\n        \n    }\n\n\n    render (){\n      return (\n\n          <div className=\"App\">\n            <header className=\"header\">\n              <img src={bird} className=\"trump-bird\" alt=\"logo\" />\n            </header>\n\n\n            <div className=\"grid-container\">\n                <div className=\"left-panel\">\n                  <p className=\"desc\">\n                    Using a corpus of the entire collection of\n                    Donald Trump's Tweets, this app generates a Markov chain. \n                  </p>\n\n                  <p className=\"desc\">\n                    From the Markov model, a sentence (or Tweet in this case)\n                    is created.\n\n                  </p>\n\n                  <p className=\"desc\">\n                    The fake Tweet generated from the Markov chain is placed\n                    amongst two real Tweets randomly selected from Donald Trump's \n                    entire Tweet history.\n                  </p>\n\n                  <p className=\"desc\">\n                  Can you pick the fake Tweet?\n                  </p>\n\n                </div>\n{/* \n                <div className=\"tweet-container\">   \n      \n                  <div onClick={()=> this.counter(0)}>\n                    <TweetBox text={this.state.allTweets[0]}/>\n                  </div> \n\n                  <div onClick={()=> this.counter(1)}>\n                    < TweetBox text={this.state.allTweets[1]}/>\n                  </div>\n\n                  <div onClick={()=> this.counter(2)}>\n                    <TweetBox text={this.state.allTweets[2]}/>\n                  </div>\n               </div> */}\n\n                {this.renderTweetBox()}\n\n                {/* <div className=\"tweet-container\">\n                 <TweetBox text={this.state.fakeTweet}/>\n\n                 {this.renderTweetBox()}\n\n\n\n                </div> */}\n\n                <div className=\"right-panel\">\n                    <p className=\"acc\">\n                      Accuracy: {this.state.accuracy}%\n                    </p>\n                    <p>\n                      Correct: {this.state.correct}  \n                      &nbsp;&nbsp;&nbsp;  \n                      Total: {this.state.total} \n                    </p>\n\n                    <br></br>\n                    <button className=\"reload-button\" onClick={() => this.componentDidMount()}> Reload </button>      \n\n                    {/* <button className=\"reload-button\" onClick={() => this.getTweets()}> Reload </button>       */}\n                 \n                </div>\n\n              </div>\n          </div>\n      );\n    }\n  } \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}