{"ast":null,"code":"var _jsxFileName = \"/Users/katiekirchner/Sites/guesstrumptweet/frontend/src/App.js\";\nimport React, { Component, useState, useEffect } from 'react'; // import React from 'react';\n\nimport './css/App.css';\nimport bird from './component/trumpBird1.png';\nimport TweetBox from './component/tweetBox';\n\nvar shuffle = require('shuffle-array');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fakeTweet: \" \",\n      tweet1: \" \",\n      tweet2: \" \",\n      previous: \" \",\n      correct: 0,\n      total: 0,\n      accuracy: 0,\n      allTweets: [\" \", \" \", \" \"]\n    };\n  }\n\n  componentDidMount() {\n    this.getTweets();\n    this.render();\n  }\n\n  getTweets() {\n    fetch('/tweet').then(res => res.json()).then(data => {\n      this.setState({\n        fakeTweet: \"faaaaaaaake    \" + data.tweet\n      });\n      console.log(this.state.fakeTweet);\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      this.setState({\n        tweet1: data.random\n      });\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      this.setState({\n        tweet2: data.random\n      });\n      this.setAllTweets();\n    }); // this.setAllTweets();\n  }\n\n  setAllTweets() {\n    var num = Math.floor(Math.random() * 3);\n    console.log(num);\n    console.log(this.state.fakeTweet);\n\n    if (num === 0) {\n      this.setState({\n        allTweets: [this.state.fakeTweet, this.state.tweet1, this.state.tweet2]\n      });\n    } else if (num === 1) {\n      this.setState({\n        allTweets: [this.state.tweet1, this.state.fakeTweet, this.state.tweet2]\n      });\n    } else if (num === 2) {\n      this.setState({\n        allTweets: [this.state.tweet1, this.state.tweet2, this.state.fakeTweet]\n      });\n    }\n  }\n\n  counter(value) {\n    var tot = this.state.total + 1;\n    this.setState({\n      previous: this.state.fakeTweet\n    });\n\n    if (this.state.allTweets[value] === this.state.fakeTweet) {\n      var cor = this.state.correct + 1;\n      this.setState({\n        correct: cor\n      });\n      var acc = (cor / tot * 100).toPrecision(4);\n      this.setState({\n        accuracy: acc\n      });\n    } else {\n      var accurate = (this.state.correct / tot * 100).toPrecision(4);\n      this.setState({\n        accuracy: accurate\n      });\n    }\n\n    this.setState({\n      total: tot\n    });\n    this.getTweets(); // this.setAllTweets();\n    // this.setState({previous: this.state.fakeTweet})\n    // this.setAccuracy();\n    // this.getTweets();\n  }\n\n  renderTweetBox() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tweet-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.counter(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: this.state.allTweets[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.counter(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: this.state.allTweets[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.counter(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: this.state.allTweets[2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: bird,\n      className: \"trump-bird\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, \"Can you pick the fake Tweet?\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, \"Using a corpus of the entire collection of Donald Trump's Tweets, this app generates a Markov chain.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, \"From the Markov chain, a sentence (or Tweet in this case) is created.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, \"The fake Tweet generated from the Markov chain is placed amongst two real Tweets randomly selected from Donald Trump's entire Tweet history.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tweet-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.counter(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: this.state.allTweets[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.counter(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: this.state.allTweets[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.counter(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TweetBox, {\n      text: this.state.allTweets[2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"acc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, \"Accuracy: \", this.state.accuracy, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, \"Correct: \", this.state.correct, \"\\xA0\\xA0\\xA0 Total: \", this.state.total), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"reload-button\",\n      onClick: () => this.getTweets(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, \" Reload Tweets \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, \" Previous fake Tweet: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \" \", this.state.previous, \" \"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/katiekirchner/Sites/guesstrumptweet/frontend/src/App.js"],"names":["React","Component","useState","useEffect","bird","TweetBox","shuffle","require","App","constructor","props","state","fakeTweet","tweet1","tweet2","previous","correct","total","accuracy","allTweets","componentDidMount","getTweets","render","fetch","then","res","json","data","setState","tweet","console","log","random","setAllTweets","num","Math","floor","counter","value","tot","cor","acc","toPrecision","accurate","renderTweetBox"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect } from 'react';\n// import React from 'react';\n\nimport './css/App.css';\nimport bird from './component/trumpBird1.png';\nimport TweetBox from './component/tweetBox';\n\nvar shuffle = require('shuffle-array');\n\n\n  class App extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        fakeTweet: \" \",\n        tweet1: \" \",\n        tweet2: \" \",\n        previous:\" \",\n        correct: 0,\n        total: 0,\n        accuracy: 0,\n        allTweets: [\" \", \" \", \" \"]  \n      };\n    }\n\n\n    componentDidMount(){\n      \n      this.getTweets();\n      this.render();\n   }\n\n\n\n\n\n    getTweets(){\n\n        fetch('/tweet').then(res => res.json()).then(data => {\n          this.setState({fakeTweet: \"faaaaaaaake    \" + data.tweet});\n          console.log(this.state.fakeTweet)\n\n        });\n\n        fetch('/random').then(res => res.json()).then(data => {\n          this.setState({tweet1: data.random});\n        });\n\n        fetch('/random').then(res => res.json()).then(data => {\n          this.setState({tweet2: data.random});\n          this.setAllTweets();\n        });\n\n        // this.setAllTweets();\n\n    }\n\n\n  \n\n    setAllTweets(){      \n        var num = (Math.floor(Math.random() * 3));  \n\n        console.log(num);\n        console.log(this.state.fakeTweet)\n\n\n        if (num === 0){\n          this.setState({allTweets: [ this.state.fakeTweet, this.state.tweet1, this.state.tweet2]});\n        } else if (num === 1){\n          this.setState({allTweets: [ this.state.tweet1, this.state.fakeTweet, this.state.tweet2]});\n        } else if (num === 2){\n          this.setState({allTweets: [ this.state.tweet1, this.state.tweet2, this.state.fakeTweet]});\n        }\n    }\n\n\n    counter(value){\n       var tot = this.state.total + 1;\n       this.setState({previous: this.state.fakeTweet})\n\n\n        if (this.state.allTweets[value] === this.state.fakeTweet){\n\n          var cor = this.state.correct+1;\n          this.setState({correct: cor});\n\n          var acc = ((cor/tot)*100).toPrecision(4);\n          this.setState({accuracy: acc});\n        } else {\n\n          var accurate = ((this.state.correct/tot)*100).toPrecision(4);\n\n          this.setState({accuracy: accurate});\n        }\n\n\n      this.setState({total: tot});\n\n      this.getTweets();\n\n      // this.setAllTweets();\n\n      // this.setState({previous: this.state.fakeTweet})\n\n      // this.setAccuracy();\n      // this.getTweets();\n    }\n\n\n\n    renderTweetBox(){\n\n        return (\n\n            <div className=\"tweet-container\">   \n\n              <div onClick={()=> this.counter(0)}>\n                <TweetBox text={this.state.allTweets[0]}/>\n              </div> \n\n              <div onClick={()=> this.counter(1)}>\n                < TweetBox text={this.state.allTweets[1]}/>\n              </div>\n\n              <div onClick={()=> this.counter(2)}>\n                <TweetBox text={this.state.allTweets[2]}/>\n              </div>\n            </div>\n          );\n        \n    }\n\n\n\n    render (){\n\n      return (\n\n          <div className=\"App\">\n            <header className=\"header\">\n              <img src={bird} className=\"trump-bird\" alt=\"logo\" />\n            </header>\n\n\n            <div className=\"grid-container\">\n                <div className=\"left-panel\">\n\n                  <p className=\"question\">\n                  Can you pick the fake Tweet?\n                  </p>\n\n\n                  <p className=\"desc\">\n                    Using a corpus of the entire collection of\n                    Donald Trump's Tweets, this app generates a Markov chain. \n                  </p>\n\n                  <p className=\"desc\">\n                    From the Markov chain, a sentence (or Tweet in this case)\n                    is created.\n\n                  </p>\n\n                  <p className=\"desc\">\n                    The fake Tweet generated from the Markov chain is placed\n                    amongst two real Tweets randomly selected from Donald Trump's \n                    entire Tweet history.\n                  </p>\n\n                \n\n                </div>\n\n                {/* {this.renderTweetBox()} */}\n\n                <div className=\"tweet-container\">   \n\n                  <div onClick={()=> this.counter(0)}>\n                    <TweetBox text={this.state.allTweets[0]}/>\n                  </div> \n\n                  <div onClick={()=> this.counter(1)}>\n                    < TweetBox text={this.state.allTweets[1]}/>\n                  </div>\n\n                  <div onClick={()=> this.counter(2)}>\n                    <TweetBox text={this.state.allTweets[2]}/>\n                  </div>\n                </div>\n\n                <div className=\"right-panel\">\n                    <p className=\"acc\">\n                      Accuracy: {this.state.accuracy}%\n                    </p>\n                    <p>\n                      Correct: {this.state.correct}  \n                      &nbsp;&nbsp;&nbsp;  \n                      Total: {this.state.total} \n                    </p>\n\n                    <br></br>\n                    <button className=\"reload-button\" onClick={() => this.getTweets()}> Reload Tweets </button>      \n                \n                    <hr></hr>\n\n                    <p> Previous fake Tweet: </p>\n                    <p> {this.state.previous} </p>\n                </div>\n\n              </div>\n          </div>\n      );\n    }\n  } \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}