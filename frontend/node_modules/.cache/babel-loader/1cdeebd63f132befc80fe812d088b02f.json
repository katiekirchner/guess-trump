{"ast":null,"code":"var _jsxFileName = \"/Users/katiekirchner/Sites/guesstrumptweet/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './css/App.css';\nimport bird from './component/trumpBird1.png';\nimport TweetBox from './component/tweetBox';\n\nfunction App() {\n  const [tweet, setTweet] = useState(\"\");\n  const [random, setRandom] = useState(\"\");\n  const [random2, setRandom2] = useState(\"\");\n  const [total, setTotal] = useState(0);\n\n  function getTweets() {\n    fetch('/tweet').then(res => res.json()).then(data => {\n      setTweet(data.tweet);\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom(data.random);\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom2(data.random);\n    });\n    setTotal({\n      total\n    } + 1);\n  }\n\n  useEffect(() => {\n    fetch('/tweet').then(res => res.json()).then(data => {\n      setTweet(data.tweet);\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom(data.random);\n    });\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom2(data.random);\n    });\n  }, []); // useEffect(() => {\n  //   fetch('/random').then(res => res.json()).then(data => {\n  //     setRandom(data.random);\n  //   });\n  // }, []);\n  // useEffect(() => {\n  //   fetch('/random').then(res => res.json()).then(data => {\n  //     setRandom2(data.random);\n  //   });\n  // }, []);\n\n  function renderTweet(i) {\n    return /*#__PURE__*/React.createElement(TweetBox, {\n      text: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: bird,\n    className: \"trump-bird\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Using a corpus of the entire collection of Donald Trump's Tweets, a tweet in the\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Using a Markov model trained on a corpus of the entire collection of Donald Trump's Tweets, a tweet in the\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Total: \", total, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tweet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, renderTweet(tweet), renderTweet(random), renderTweet(random2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"reload-button\",\n    onClick: () => getTweets(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \" Reload \"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/katiekirchner/Sites/guesstrumptweet/frontend/src/App.js"],"names":["React","useState","useEffect","bird","TweetBox","App","tweet","setTweet","random","setRandom","random2","setRandom2","total","setTotal","getTweets","fetch","then","res","json","data","renderTweet","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/App.css';\nimport bird from './component/trumpBird1.png';\nimport TweetBox from './component/tweetBox';\n\n\n\n\nfunction App() {\n\n  const [tweet, setTweet] = useState(\"\");\n  const [random, setRandom] = useState(\"\");\n  const [random2, setRandom2] = useState(\"\");\n\n  const [total, setTotal] = useState(0);\n\n\n  function getTweets(){\n\n    fetch('/tweet').then(res => res.json()).then(data => {\n      setTweet(data.tweet);\n    });\n\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom(data.random);\n    });\n\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom2(data.random);\n    });\n\n    setTotal({total}+1);\n\n  }\n\n\n  useEffect(() => {\n    fetch('/tweet').then(res => res.json()).then(data => {\n      setTweet(data.tweet);\n    });\n\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom(data.random);\n    });\n\n    fetch('/random').then(res => res.json()).then(data => {\n      setRandom2(data.random);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   fetch('/random').then(res => res.json()).then(data => {\n  //     setRandom(data.random);\n  //   });\n  // }, []);\n\n  // useEffect(() => {\n  //   fetch('/random').then(res => res.json()).then(data => {\n  //     setRandom2(data.random);\n  //   });\n  // }, []);\n\n\n  function renderTweet(i){\n    return <TweetBox text={i} />;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <img src={bird} className=\"trump-bird\" alt=\"logo\" />\n      </header>\n\n\n      <div className=\"grid-container\">\n          <div className=\"left-panel\">\n            <p className=\"font20\">\n              Using a corpus of the entire collection of\n              Donald Trump's Tweets, a tweet in the  \n            </p>\n\n            <p className=\"font20\">\n              Using a Markov model trained on a corpus of the entire collection of\n              Donald Trump's Tweets, a tweet in the  \n            </p>\n\n\n            <p>Total: {total} </p>\n          </div>\n\n\n          <div className=\"tweet-container\">\n            {renderTweet(tweet)}\n            {renderTweet(random)}\n            {renderTweet(random2)}\n          </div>\n\n          <div className=\"right-panel\">\n              <button className=\"reload-button\" onClick={() => getTweets()}> Reload </button>      \n          </div>\n\n        </div>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}